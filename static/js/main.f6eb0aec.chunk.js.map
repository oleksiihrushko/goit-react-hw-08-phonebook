{"version":3,"sources":["redux/contacts/contactsActions.js","routes.js","service/themeConfig.js","service/PrivateRoute.js","service/PublicRoute.js","redux/theme/themeActions.js","components/logo/Logo.js","components/navigation/Navigation.js","components/userMenu/UserMenu.js","components/appBar/AppBar.js","components/App.js","components/AppContainer.js","redux/contacts/contactsReducer.js","redux/theme/themeReducer.js","redux/store.js","index.js","components/navigation/Navigation.module.css","redux/contacts/contactsSelectors.js","redux/auth/authOperations.js","redux/auth/authActions.js","redux/auth/authSelectors.js","redux/auth/authReducer.js","components/logo/Logo.module.css"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","path","label","exact","component","lazy","private","restricted","themeConfig","light","headerBg","fontColor","bodybg","dark","PrivateRoute","Component","routeProps","isAuthenticated","useSelector","state","auth","token","render","props","to","changeTheme","logoStyles","appear","styles","appearActive","Logo","CSSTransition","in","timeout","classNames","unmountOnExit","className","logo","Navigation","nav","NavigationLink","navLink","activeClassName","NavigationLinkActive","container","display","alignItems","avatar","marginRight","name","fontWight","connect","authSelectors","getUserName","onLogout","authOperations","logOut","style","src","alt","width","Button","variant","color","type","onClick","justifyContent","borderBottom","marginBottom","backgroundColor","theme","contactsSelectors","getTheme","dicpatch","themeActions","themeState","App","isloadingContacts","background","fallback","routes","map","route","key","PublicRoute","AppContainer","this","onGetCurrentUser","getLoading","getCurrentUser","items","createReducer","contactsActions","_","action","payload","filter","contact","id","loading","combineReducers","themeReducer","authPersistConfig","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","themeColor","persistReducer","authReducer","middleware","thunk","persistor","persistStore","ReactDOM","document","getElementById","module","exports","getContacts","getFilter","getFillteredContacts","createSelector","toLowerCase","includes","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","authActions","registerRequest","post","then","response","data","registerSuccess","catch","error","registerError","logoutRequest","logoutSuccess","logoutError","logIn","logInRequest","logInSuccess","logInError","getState","persistedToken","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","user","initialUserState","email"],"mappings":"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","file":"static/js/main.f6eb0aec.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n// import { v4 as uuid } from 'uuid';\r\n\r\nconst fetchContactRequest = createAction('contacts/fetchRequest');\r\nconst fetchContactSuccess = createAction('contacts/fetchSuccess');\r\nconst fetchContactError = createAction('contacts/fetchError');\r\n\r\nconst addContactRequest = createAction('contacts/addRequest');\r\nconst addContactSuccess = createAction('contacts/addSuccess');\r\nconst addContactError = createAction('contacts/addError');\r\n\r\nconst removeContactRequest = createAction('contacts/removeRequest');\r\nconst removeContactSuccess = createAction('contacts/removeSuccess');\r\nconst removeContactError = createAction('contacts/removeError');\r\n\r\n// const addContact = createAction('contacts/add', (name, number) => ({\r\n//   payload: {\r\n//     contact: { id: uuid(), name, number },\r\n//   },\r\n// }));\r\n\r\n// const removeContact = createAction('contacts/remove');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nexport default {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  // addContact,\r\n  // removeContact,\r\n  changeFilter,\r\n};\r\n","// export default {\r\n//   logIn: '/login',\r\n//   register: '/register',\r\n//   contacts: '/contacts',\r\n\r\nimport { lazy } from 'react';\r\n\r\n// };\r\nexport default [\r\n  {\r\n    path: '/login',\r\n    label: 'Login',\r\n    exact: true,\r\n    component: lazy(() => import('./components/logInPage/LogInPage')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/register',\r\n    label: 'Register',\r\n    exact: true,\r\n    component: lazy(() => import('./components/registerPage/registerPage')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/contacts',\r\n    label: 'Contacts',\r\n    exact: true,\r\n    component: lazy(() => import('./components/contacts/Contacts')),\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n];\r\n","const themeConfig = {\r\n  light: {\r\n    headerBg: '#F7B30C',\r\n    fontColor: 'black',\r\n    bodybg: 'white',\r\n  },\r\n  dark: {\r\n    headerBg: '#3c3c3c',\r\n    fontColor: 'white',\r\n    bodybg: 'rgb(100, 100, 100)',\r\n  },\r\n};\r\n\r\nexport default themeConfig;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst PrivateRoute = ({ component: Component, ...routeProps }) => {\r\n  const isAuthenticated = useSelector(state => state.auth.token);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst PrivateRoute = ({ component: Component, restricted, ...routeProps }) => {\r\n  const isAuthenticated = useSelector(state => state.auth.token);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        isAuthenticated && restricted ? (\r\n          <Redirect to=\"/contacts\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst changeTheme = createAction('theme/changeTheme');\r\n\r\nexport default { changeTheme };\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './Logo.module.css';\r\n\r\nconst logoStyles = {\r\n  appear: styles.appear,\r\n  appearActive: styles.appearActive,\r\n};\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      timeout={500}\r\n      classNames={logoStyles}\r\n      unmountOnExit\r\n    >\r\n      <h1 className={styles.logo}>Phonebook</h1>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './Navigation.module.css';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <NavLink\r\n        exact\r\n        to=\"/login\"\r\n        className={styles.NavigationLink + ' ' + styles.navLink}\r\n        activeClassName={styles.NavigationLinkActive}\r\n      >\r\n        LogIn\r\n      </NavLink>\r\n      <br />\r\n      <NavLink\r\n        to=\"/register\"\r\n        className={styles.NavigationLink + ' ' + styles.navLink}\r\n        activeClassName={styles.NavigationLinkActive}\r\n      >\r\n        Register\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n\r\n// import React from 'react';\r\n// import { NavLink } from 'react-router-dom';\r\n// import styles from './Navigation.module.css';\r\n// import routes from '../../routes';\r\n\r\n// const Navigation = () => {\r\n//   return (\r\n//     <div className={styles.nav}>\r\n//       <NavLink\r\n//         exact\r\n//         to={routes.logIn}\r\n//         className={styles.NavigationLink + ' ' + styles.navLink}\r\n//         activeClassName={styles.NavigationLinkActive}\r\n//       >\r\n//         LogIn\r\n//       </NavLink>\r\n//       <br />\r\n//       <NavLink\r\n//         to={routes.register}\r\n//         className={styles.NavigationLink + ' ' + styles.navLink}\r\n//         activeClassName={styles.NavigationLinkActive}\r\n//       >\r\n//         Register\r\n//       </NavLink>\r\n//       <NavLink\r\n//         to={routes.contacts}\r\n//         className={styles.NavigationLink + ' ' + styles.navLink}\r\n//         activeClassName={styles.NavigationLinkActive}\r\n//       >\r\n//         Contacts\r\n//       </NavLink>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Navigation;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div style={styles.container}>\r\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n    <span style={styles.name}>Welcome, {name}</span>\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      type=\"button\"\r\n      onClick={onLogout}\r\n    >\r\n      Logout\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUserName(state),\r\n  avatar: 'https://img.icons8.com/officel/2x/avatar.png',\r\n});\r\n\r\nexport default connect(mapStateToProps, { onLogout: authOperations.logOut })(\r\n  UserMenu,\r\n);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../../redux/auth/authSelectors';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\nimport themeActions from '../../redux/theme/themeActions';\r\n\r\nimport Logo from '../logo/Logo';\r\nimport Navigation from '../navigation/Navigation';\r\nimport UserMenu from '../userMenu/UserMenu';\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst styles = {\r\n  light: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n    marginBottom: '5px',\r\n  },\r\n  dark: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n    backgroundColor: 'rgb(50, 50, 50)',\r\n    color: 'white',\r\n    marginBottom: '5px',\r\n  },\r\n};\r\n\r\nconst AppBar = ({ isAuthenticated, changeTheme, theme }) => {\r\n  let themeState = 'light';\r\n  theme ? (themeState = 'light') : (themeState = 'dark');\r\n\r\n  return (\r\n    <header style={styles[themeState]}>\r\n      <Logo />\r\n      <Button variant=\"contained\" color=\"primary\" onClick={changeTheme}>\r\n        Change theme\r\n      </Button>\r\n\r\n      {isAuthenticated ? <UserMenu /> : <Navigation />}\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n  theme: contactsSelectors.getTheme(state),\r\n});\r\n\r\nconst mapDispatchToProps = dicpatch => ({\r\n  changeTheme: () => dicpatch(themeActions.changeTheme()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppBar);\r\n","import React, { Suspense } from 'react';\r\nimport { BrowserRouter, Switch, Redirect } from 'react-router-dom';\r\nimport routes from '../routes';\r\n\r\nimport themeConfig from '../service/themeConfig';\r\nimport PrivateRoute from '../service/PrivateRoute';\r\nimport PublicRoute from '../service/PublicRoute';\r\nimport AppBar from './appBar/AppBar';\r\n\r\nconst App = ({ theme, isloadingContacts }) => {\r\n  let themeState = 'light';\r\n  theme ? (themeState = 'light') : (themeState = 'dark');\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div\r\n        style={{\r\n          color: themeConfig[themeState].fontColor,\r\n          background: themeConfig[themeState].bodybg,\r\n        }}\r\n      >\r\n        <AppBar />\r\n        {/* {isloadingContacts && <h2>Loading ...</h2>} */}\r\n        <Suspense fallback={<h1>Loading...</h1>}>\r\n          <Switch>\r\n            {routes.map(route => {\r\n              return route.private ? (\r\n                <PrivateRoute key={route.label} {...route} />\r\n              ) : (\r\n                <PublicRoute\r\n                  key={route.label}\r\n                  {...route}\r\n                  restricted={route.restricted}\r\n                />\r\n              );\r\n            })}\r\n            <Redirect to=\"/login\" />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsSelectors from '../redux/contacts/contactsSelectors';\r\nimport { authOperations } from '../redux/auth';\r\nimport App from './App';\r\n\r\nclass AppContainer extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return <App {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    theme: contactsSelectors.getTheme(state),\r\n    isloadingContacts: contactsSelectors.getLoading(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dicpatch => ({\r\n  onGetCurrentUser: () => dicpatch(authOperations.getCurrentUser()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer);\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport contactsActions from './contactsActions';\r\n\r\nconst onAddContact = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\n\r\nconst onRemoveContact = (state, action) =>\r\n  state.filter(contact => contact.id !== action.payload);\r\n\r\nconst onChangeFilter = (_, action) => action.payload;\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.fetchContactSuccess]: (_, action) => action.payload,\r\n  [contactsActions.addContactSuccess]: onAddContact,\r\n  [contactsActions.removeContactSuccess]: onRemoveContact,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactsActions.changeFilter]: onChangeFilter,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactsActions.addContactRequest]: () => true,\r\n  [contactsActions.addContactSuccess]: () => false,\r\n  [contactsActions.addContactError]: () => false,\r\n  [contactsActions.fetchContactRequest]: () => true,\r\n  [contactsActions.fetchContactSuccess]: () => false,\r\n  [contactsActions.fetchContactError]: () => false,\r\n  [contactsActions.removeContactRequest]: () => true,\r\n  [contactsActions.removeContactSuccess]: () => false,\r\n  [contactsActions.removeContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  loading,\r\n  filter,\r\n});\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport themeActions from './themeActions';\r\n\r\nconst themeReducer = createReducer(true, {\r\n  [themeActions.changeTheme]: state => !state,\r\n});\r\n\r\nexport default themeReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport contactsReducer from './contacts/contactsReducer';\r\nimport themeReducer from './theme/themeReducer';\r\nimport authReducer from './auth/authReducer';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    themeColor: themeReducer,\r\n    // auth: authReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware: [thunk],\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport './index.css';\r\nimport App from './components/AppContainer';\r\nimport { store, persistor } from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__2MBtt\",\"NavigationLink\":\"Navigation_NavigationLink__49ns9\",\"navLink\":\"Navigation_navLink__2kLRU\",\"NavigationLinkActive\":\"Navigation_NavigationLinkActive__2YgQI\",\"AddInfoLink\":\"Navigation_AddInfoLink__3w95f\"};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.items;\r\nconst getTheme = state => state.themeColor;\r\nconst getLoading = state => state.contacts.loading;\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getFillteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n\r\nexport default {\r\n  getContacts,\r\n  getTheme,\r\n  getLoading,\r\n  getFilter,\r\n  getFillteredContacts,\r\n};\r\n","import axios from 'axios';\r\nimport authActions from './authActions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  axios\r\n    .post('/users/signup', credentials)\r\n    .then(response => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.registerSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(authActions.registerError(error)));\r\n};\r\n\r\nconst logIn = credentials => dispatch => {\r\n  dispatch(authActions.logInRequest());\r\n\r\n  axios\r\n    .post('/users/logIn', credentials)\r\n    .then(response => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.logInSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(authActions.logInError(error)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  axios\r\n    .get('/users/current')\r\n    .then(({ data }) => dispatch(authActions.getCurrentUserSuccess(data)))\r\n    .catch(error => authActions.getCurrentUserError(error));\r\n};\r\n\r\nconst logOut = () => dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  axios\r\n    .post('/users/logout')\r\n    .then(() => {\r\n      token.unset();\r\n      dispatch(authActions.logoutSuccess());\r\n    })\r\n    .catch(error => dispatch(authActions.logoutError(error)));\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst logInRequest = createAction('auth/logInRequest');\r\nconst logInSuccess = createAction('auth/logInSuccess');\r\nconst logInError = createAction('auth/logInError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logInRequest,\r\n  logInSuccess,\r\n  logInError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","const isAuthenticated = state => state.auth.token;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport default { isAuthenticated, getUserName };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logInSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logInSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.logInError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__P470L\",\"appear\":\"Logo_appear__33OYk\",\"appearActive\":\"Logo_appearActive__2E_Gc\"};"],"sourceRoot":""}